{"version":3,"sources":["./src/environments/environment.ts","./src/app/person-services.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/dashbourd-page/dashbourd-page.component.html","./src/app/dashbourd-page/dashbourd-page.component.ts","./src/app/app.module.ts","./src/app/login-page/login-page.component.ts","./src/app/login-page/login-page.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PersonServicesService {\n\n  private loginStatusSource = new BehaviorSubject<boolean>(null);\n  loginStatus = this.loginStatusSource.asObservable();\n  changeLoginStatus(status:boolean){\n    this.loginStatusSource.next(status)\n  }\n  getData() {\n    return [\n      {No: 1, info: 'Name', description: 'Ali'},\n      {No: 2, info: 'family', description: 'Alavi'},\n      {No: 3, info: 'username', description: 'Alavi'},\n      {No: 4, info: 'password', description: '123456'},\n      {No: 5, info: 'idnumber', description: '0653141831'},\n    ];\n  }\n\n  constructor() { }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'testApp';\n\n  persons = [];\n}\n","<router-outlet></router-outlet>\n","<mat-card>\n  <mat-card-header>\n    <mat-card-title>\n      {{ persons[2].description }} Dashboard Information\n    </mat-card-title>\n  </mat-card-header>\n  <mat-card-content>\n    <table>\n      <thead>\n        <th>No.</th>\n        <th>Personal Info.</th>\n        <th>Info. Description</th>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let item of persons\">\n          <td>{{ item.No }}</td>\n          <td>{{ item.info }}</td>\n          <td>{{ item.description }}</td>\n        </tr>\n      </tbody>\n    </table>\n  </mat-card-content>\n</mat-card>\n","import { PersonServicesService } from './../person-services.service';\nimport { Component, OnInit } from '@angular/core';\nimport {  Router } from '@angular/router';\n\n@Component({\n  selector: 'app-dashbourd-page',\n  templateUrl: './dashbourd-page.component.html',\n  styleUrls: ['./dashbourd-page.component.css']\n})\nexport class DashbourdPageComponent implements OnInit {\n\n  constructor(private _personservice : PersonServicesService,\n              private router:Router) {\n    this.persons = this._personservice.getData(); \n   }\n\n  persons = [];\n\n\n  ngOnInit(): void {\n    this._personservice.loginStatus.subscribe(result=>{\n      if(!result)\n        this.router.navigate(['/login']);\n    })\n  }\n\n}\n","import { PersonServicesService } from './person-services.service';\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms'\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { LoginPageComponent } from './login-page/login-page.component';\nimport { DashbourdPageComponent } from './dashbourd-page/dashbourd-page.component';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport {MatTableModule} from '@angular/material/table';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginPageComponent,\n    DashbourdPageComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    BrowserAnimationsModule,\n    MatFormFieldModule,\n    MatCardModule,\n    MatInputModule,\n    MatButtonModule,\n    MatTableModule\n\n  ],\n  providers: [PersonServicesService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { PersonServicesService } from './../person-services.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormGroup, FormControl, Validators} from '@angular/forms';\n\n\n@Component({\n  selector: 'app-login-page',\n  templateUrl: './login-page.component.html',\n  styleUrls: ['./login-page.component.css']\n})\nexport class LoginPageComponent implements OnInit {\n\n  signupForm: FormGroup;\n  invalidMessage:string;\n\n  constructor(private _personsservice: PersonServicesService,\n              private router:Router){ \n  }\n\n  persons = [];\n\n\n  ngOnInit(): void {\n    this.signupForm = new FormGroup({\n      'userData':new FormGroup({ \n       'username' : new FormControl(null,[Validators.required]),\n       'password' : new FormControl(null,[Validators.required]),\n     }),\n   })\n  }\n  \n  OnSubmit()  {\n    this.invalidMessage=null;\n    let data = this._personsservice.getData();\n    let formData = [this.signupForm.get('userData.username').value, this.signupForm.get('userData.password').value] ;\n    \n    if(formData[0] == data[2].description && formData[1] == data[3].description  ){\n        this._personsservice.changeLoginStatus(true);\n        this.router.navigate(['/dashboard']);\n    }\n    else {\n      this.invalidMessage =\"username or password is invalid\";\n    }\n\n  }\n}\n\n\n\n","<mat-card>\n  <mat-card-content>\n    <form [formGroup]=\"signupForm\" (ngSubmit)=\"OnSubmit()\">\n      <h2>Log In Form</h2>\n      <div formGroupName=\"userData\">\n        <div class=\"form-group\">\n          <mat-form-field appearance=\"outline\">\n            <mat-label>Username</mat-label>\n            <input\n              matInput\n              type=\"text\"\n              name=\"username\"\n              class=\"form-control\"\n              placeholder=\"valid username is Alavi\"\n              formControlName=\"username\"\n            />\n            <mat-error\n              *ngIf=\"\n                signupForm.get('userData.username').invalid &&\n                signupForm.get('userData.username').touched\n              \"\n            >\n              this field is required!\n            </mat-error>\n          </mat-form-field>\n        </div>\n        <div class=\"form-group\">\n          <mat-form-field appearance=\"outline\">\n            <mat-label>Password</mat-label>\n            <input\n              matInput\n              type=\"password\"\n              name=\"password\"\n              class=\"form-control\"\n              placeholder=\"valid password is 123456\"\n              formControlName=\"password\"\n            />\n            <mat-error\n              *ngIf=\"\n                !signupForm.get('userData.password').valid &&\n                signupForm.get('userData.password').touched\n              \"\n            >\n              this field is required!\n            </mat-error>\n          </mat-form-field>\n        </div>\n      </div>\n\n      <button mat-raised-button color=\"primary\" type=\"submit\">LOGIN</button>\n      <mat-error\n        style=\"margin: 15px auto; text-align: center\"\n        *ngIf=\"invalidMessage\"\n        >{{ invalidMessage }}</mat-error\n      >\n    </form>\n  </mat-card-content>\n</mat-card>\n","import { DashbourdPageComponent } from './dashbourd-page/dashbourd-page.component';\nimport { LoginPageComponent } from './login-page/login-page.component';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [\n  {path: 'login', component : LoginPageComponent},\n  {path: 'dashboard', component : DashbourdPageComponent},\n  {path:\"\",redirectTo:\"login\",pathMatch:\"full\"}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}